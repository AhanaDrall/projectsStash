let dotenv,express,morgan,helmet,fs,path,routes,isAuthenticated;_75a‍.w("dotenv/config",[["default",["dotenv"],function(v){dotenv=v}]]);_75a‍.w("express",[["default",["express"],function(v){express=v}]]);_75a‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_75a‍.w("helmet",[["default",["helmet"],function(v){helmet=v}]]);_75a‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_75a‍.w("path",[["default",["path"],function(v){path=v}]]);_75a‍.w("./routes/user",[["default",["routes"],function(v){routes=v}]]);_75a‍.w("./utils/isAuthenticated",[["isAuthenticated",["isAuthenticated"],function(v){isAuthenticated=v}]]);








const app = express();

const accessLogStream = fs.createWriteStream(
  path.join(__dirname, "../access.log"),
  { flags: "a" }
);

app.use(helmet());
app.use(morgan("combined", { stream: accessLogStream }));
app.use(express.json({ limit: "50mb" }));
app.use(express.urlencoded({ extended: true, limit: "50mb" }));

app.use("/user", routes);

app.use((req, res) => {
  res.status(404).send("404: Page not found");
});

const port = process.env.PORT || 8000;

app.listen(port, () => {
  console.log(`Example app listening on port 4100!`);
});
